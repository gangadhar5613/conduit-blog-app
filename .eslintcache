[{"/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/index.js":"1","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/App.js":"2","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/Home.js":"3","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/Header.js":"4","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/Banner.js":"5","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/ListArticles.js":"6","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/Tags.js":"7","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/Loader.js":"8","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/SignUp.js":"9","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/Login.js":"10","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/SingleArticle.js":"11","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/Newpost.js":"12","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/EditArticle.js":"13","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/UserProfile.js":"14","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/UserInfo.js":"15","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/NoMatch.js":"16","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/Comment.js":"17","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/Pagination.js":"18"},{"size":157,"mtime":1613025774299,"results":"19","hashOfConfig":"20"},{"size":1871,"mtime":1613722751673,"results":"21","hashOfConfig":"20"},{"size":4361,"mtime":1613642645280,"results":"22","hashOfConfig":"20"},{"size":2754,"mtime":1613641872750,"results":"23","hashOfConfig":"20"},{"size":475,"mtime":1613137858767,"results":"24","hashOfConfig":"20"},{"size":3856,"mtime":1613588781886,"results":"25","hashOfConfig":"20"},{"size":1328,"mtime":1613622618975,"results":"26","hashOfConfig":"20"},{"size":250,"mtime":1613364218233,"results":"27","hashOfConfig":"20"},{"size":6377,"mtime":1613621448664,"results":"28","hashOfConfig":"20"},{"size":4904,"mtime":1613592468902,"results":"29","hashOfConfig":"20"},{"size":11033,"mtime":1613724394523,"results":"30","hashOfConfig":"20"},{"size":6265,"mtime":1613623414243,"results":"31","hashOfConfig":"20"},{"size":7001,"mtime":1613588635844,"results":"32","hashOfConfig":"20"},{"size":7178,"mtime":1613542485689,"results":"33","hashOfConfig":"20"},{"size":5730,"mtime":1613622156825,"results":"34","hashOfConfig":"20"},{"size":159,"mtime":1613554566501,"results":"35","hashOfConfig":"20"},{"size":1435,"mtime":1613570689067,"results":"36","hashOfConfig":"20"},{"size":1315,"mtime":1613622659520,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1cxilvv",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/index.js",[],["81","82"],"/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/App.js",[],"/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/Home.js",["83"],"import React from 'react'\r\nimport Banner from './Banner'\r\nimport ListArticles from './ListArticles'\r\nimport Loader from './Loader'\r\nimport Tags from './Tags'\r\nimport Pagination from './Pagination'\r\n\r\n\r\nclass Home extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      articles:null,\r\n      error:'',\r\n      tags:null,\r\n      activeTagArticles:null,\r\n      activeTag:null,\r\n      articlesCount:0,\r\n      articlesPerPage:8,\r\n      activePageIndex:1,\r\n      acitveUser:( JSON.parse( localStorage.getItem('user')) ? JSON.parse( localStorage.getItem('user')) : null )\r\n    }\r\n  }\r\n\r\n  handleAddToFavoriteArticles = (article) => {\r\n       let user = {\r\n         \"user\":{\r\n           favoriteArticles:article.id\r\n         }\r\n       }\r\n  }\r\n\r\n  handleAllArticles=  async() => {\r\n      this.setState({\r\n        activeTag:null,\r\n        articles:null\r\n    })\r\n\r\n      await fetch('/api/articles')\r\n        .then((res) => {\r\n            if(!res.ok){\r\n              throw new Error(res.statusText)\r\n            }else{\r\n              return res.json()\r\n            }\r\n        }\r\n        )\r\n        .then((articles) => this.setState({articles:articles,articlesCount:articles.articlesCount}))\r\n        .catch((error) => this.setState({error:'Not able to fetch the articles'}))\r\n  }\r\n\r\n  handleTag =  (event) => {\r\n    \r\n         console.log(event.target)\r\n         fetch(`/api/articles/?tag=${event.target.id}`)\r\n       .then((res) => {\r\n         if(!res.ok){\r\n           throw new Error(res.statusText)\r\n         }else{\r\n           return res.json()\r\n         }\r\n       })\r\n       .then((articles) => this.setState({articles:articles,activeTag:event.target.id}))\r\n       .catch((error) => this.setState({error:'Not able to fetch the articles'}))\r\n  }\r\n\r\n  componentDidUpdate(_prevProps,prevState){\r\n    if(prevState.activePageIndex !== this.state.activePageIndex){\r\n      this.fetchData()\r\n    }\r\n  }\r\n\r\n   componentDidMount(){\r\n     this.fetchData()\r\n   }\r\n\r\n  fetchData(){\r\n    let limit = this.state.articlesPerPage\r\n    let offset = (this.state.activePageIndex - 1) * limit\r\n       fetch(`/api/articles/?limit=${limit}&offset=${offset}`)\r\n       .then((res) => {\r\n         if(!res.ok){\r\n            throw new Error(res.statusText)\r\n         }else{\r\n            return res.json()\r\n         }\r\n       })\r\n       .then((articles) => this.setState({articles:articles,articlesCount:articles.articlesCount}))\r\n       .catch((error) => this.setState({error:'Not able to fetch the articles'}))\r\n\r\n       fetch('/api/tags')\r\n       .then((res) => {\r\n        if(!res.ok){\r\n           throw new Error(res.statusText)\r\n        }else{\r\n           return res.json()\r\n        }\r\n      })\r\n    .then((tags) => this.setState({tags:tags}) )\r\n    .catch((error) => this.setState({error:'Not able to fetch the tags'}))\r\n  }\r\n\r\n  updateCurrentIndex = (index) => {\r\n      this.setState({activePageIndex:index},this.fetchData)\r\n  } \r\n\r\n    render(){\r\n\r\n        return(\r\n          <>\r\n           <main className='conatiner relative mx-auto'>\r\n              <Banner />\r\n                <section className='flex flex-row mx-10   my-2'>\r\n                      {\r\n                        (this.state.error ? <p className='text-3xl text-center w-full text-shadow-sm'>{this.state.error}</p> : '')\r\n                      }\r\n                      {\r\n                        ((!this.state.tags || !this.state.articles) ? <Loader /> :\r\n                        <>\r\n                          <ListArticles activeUser={this.state.acitveUser} handleAllArticles ={this.handleAllArticles} articles={this.state.articles.articles} activeTag={this.state.activeTag} activeTagArticles={(this.state.activeTagArticles ? this.state.activeTagArticles.articles : '')} />\r\n                          <Tags handleTag={this.handleTag} tags={this.state.tags.tags} />\r\n                        </>\r\n                        )\r\n                      }\r\n                </section>\r\n                <section className='container mx-auto flex items-center justify-center my-5'>\r\n                     <Pagination updateCurrentIndex={this.updateCurrentIndex} articlesCount={this.state.articlesCount} activePageIndex={this.state.activePageIndex} articlesPerPage={this.state.articlesPerPage} />\r\n                </section>\r\n           </main>\r\n          </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/Header.js",[],"/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/Banner.js",[],"/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/ListArticles.js",[],"/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/Tags.js",["84","85"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from './Loader'\r\nclass Tags extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n\r\n            <section className='shadow-lg absolute right-0 text-center bg-red-200 py-4 w-96 p-5  '>\r\n                <div>\r\n                    <h2 className='text-md font-bold'>Popular Tags</h2>\r\n                </div>\r\n                <div className='tags py-2 items-center justify-between grid grid-cols-2 gap-2 '>\r\n                    {\r\n\r\n                        (!this.props.tags ? <Loader /> : \r\n                         this.props.tags.map((tag) => {\r\n                             return   <SingleTag key={tag} handleTag={this.props.handleTag}  tag={tag} />\r\n                         })\r\n                        )\r\n                    }\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport function SingleTag(props){\r\n    \r\n   return(\r\n    <div  onClick={props.handleTag} id={props.tag} className=\"mx-4 flex flex-row items-center cursor-pointer  text-shadow-xl text-gray-800\">\r\n        <i id={props.tag} className=\"fas relative top-1 px-1 text-blue-800 fa-tag\"></i>\r\n      <span id={props.tag}>{props.tag}</span>\r\n    </div>\r\n   )\r\n}\r\n\r\nexport default Tags","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/Loader.js",[],"/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/SignUp.js",["86","87","88","89","90"],"import React from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport Home from './Home'\r\n\r\nclass SignUp extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            username:'',\r\n            email:'',\r\n            pageError:'',\r\n            password:'',\r\n            errors :{\r\n                email:'',\r\n               password:'',\r\n               username:'',\r\n            },\r\n        }\r\n    }\r\n\r\n\r\n    handleSignup = async (event) => {\r\n        event.preventDefault()\r\n           const user = {\r\n               \"user\":{\r\n                   username:this.state.username,\r\n                   email: this.state.email,\r\n                   password:this.state.password\r\n               }\r\n           }        \r\n                fetch(`/api/users`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(user)})\r\n             .then((res) => {\r\n                if(!res.ok){\r\n                  throw new Error(res.statusText)\r\n                }else{\r\n                  return res.json()\r\n                }\r\n                })\r\n                .then((data) => localStorage.setItem('user',JSON.stringify(data.user)))\r\n                .then(() => this.setState({isUserSignup:true}))\r\n                .catch((error) => this.setState({pageError:'Not able to signup'}))\r\n                window.location.href = 'http://localhost:3000/'\r\n    }\r\n\r\n    handleInput = (event) => {\r\n     const{name,value} = event.target\r\n\r\n     const errors = this.state.errors\r\n        switch (name) {\r\n            case 'username':\r\n                \r\n                errors.username = (value.length >=6 && value.trim().length>=6 ) ? '' : 'Username must contain 6 characters'\r\n                 this.setState({username:value})\r\n                break;\r\n            case 'email':\r\n                errors.email = validateEmail(value) ? '' : 'Please enter valid email'\r\n                this.setState({email:value})\r\n                break\r\n            case 'password':\r\n                errors.password = (value.length >=6 && validatePassword(value)) ? '': ' Password must a number & letter'\r\n                this.setState({password:value})\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n       \r\n    render(){\r\n        if(localStorage.getItem('user')){\r\n            return   <Redirect to='/' />\r\n        } else{\r\n        return(\r\n            <section className='h-screen overflow-hidden bg-gray-100 flex items-center justify-center' >\r\n                   <div className=  ' w-96 h-96 p-3    rounded-md shadow-xl'>\r\n                        <div className=''>\r\n                            <div className='text-center my-2 text-2xl font-bold  text-shadow-md'>\r\n                                <h2>SignUp</h2>\r\n                            </div>\r\n                            <form >\r\n                                <div className='flex flex-col my-1'>\r\n                                    <label className='text-md text-red-800 font-bold' htmlFor='username' id='username-label'>Username</label>\r\n                                    <input onChange={this.handleInput} className='w-full  p-1 shadow border border-transparent focus:outline-none focus:ring-2 focus:ring-green-700 focus:border-transparent  outline-none  rounded-sm' id='username' type='text' value={this.state.username} name='username'  placeholder='Please enter username'></input>\r\n                                    <span className='text-red-500 text-sm my-1'>{this.state.errors.username ? this.state.errors.username : ''}</span>\r\n                                </div>\r\n                                <div className='flex flex-col my-2'>\r\n                                    <label className='text-md text-red-800 font-bold' htmlFor='email' id='email-label'>Email</label>\r\n                                    <input onChange={this.handleInput} className='w-full shadow  p-1 border border-transparent focus:outline-none focus:ring-2 focus:ring-green-700 focus:border-transparent  outline-none  rounded-sm' id='email' type='email' value={this.state.email} name='email'  placeholder='Please enter email'></input>\r\n                                    <span className='text-red-500 text-sm my-1'>{this.state.errors.email ? this.state.errors.email : ''}</span>\r\n                                </div>\r\n                                <div className='flex flex-col my-2'>\r\n                                    <label className='text-md text-red-800 font-bold' htmlFor='Password' id='Password-label'>Password</label>\r\n                                    <input onChange={this.handleInput} className='w-full shadow p-1 border border-transparent focus:outline-none focus:ring-2 focus:ring-green-700 focus:border-transparent  outline-none  rounded-sm' id='Password' type='password' value={this.state.password} name='password'  placeholder='Please enter Password'></input>\r\n                                    <span className='text-red-500 text-sm my-1'>{this.state.errors.password ? this.state.errors.password : ''}</span>\r\n                                </div>\r\n                                <div className='flex justify-center my-4'>\r\n                                    <button onClick={this.handleSignup} className='bg-red-800 py-2 px-6 text-white rounded-sm' type='submit' >Submit</button>\r\n                                </div>\r\n                                <div className='flex flex-row text-center justify-center'>\r\n                                    <h2 className='text-md font-bold text-green-800'>Already Registered? </h2>\r\n                                    <Link to='/login' className='text-blue-700 font-bold mx-1'>\r\n                                       Login\r\n                                    </Link>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                   </div>\r\n            </section>\r\n        )\r\n      }\r\n    }\r\n}\r\n\r\n\r\nexport function validateEmail(email){\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n}\r\n\r\n\r\nexport function validatePassword(password){\r\n    const re = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,}$/\r\n       return re.test(password)\r\n}\r\n\r\n\r\nexport default SignUp","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/Login.js",["91"],"import { data } from 'autoprefixer'\r\nimport React from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport {validateEmail,validatePassword} from './SignUp'\r\n\r\nclass Login extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            email:'',\r\n            password:'',\r\n            pageError:'',\r\n            errors :{\r\n                email:'',\r\n                password: ''\r\n            },\r\n            isUserLoggedin:false\r\n\r\n        }\r\n    }\r\n\r\n    handleInput = (event) => {\r\n     const{name,value} = event.target\r\n     const errors = this.state.errors\r\n\r\n        switch (name) {\r\n            case 'email':\r\n                 errors.email = validateEmail(value) ? '' : 'Please enter valid email'\r\n                this.setState({email:value})\r\n                break\r\n            case 'password':\r\n                errors.password = validatePassword(value) ? '' : 'Password must contain a number & letter'\r\n                this.setState({password:value})\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    handlelogin = async (event) => {\r\n        event.preventDefault()\r\n        let user = {\r\n            \"user\":{\r\n                \"email\":this.state.email,\r\n                \"password\":this.state.password\r\n            }\r\n        }\r\n\r\n      await  fetch('/api/users/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(user)})\r\n      .then((res) => {\r\n        if(!res.ok){\r\n          throw new Error(res.statusText)\r\n        }else{\r\n          return res.json()\r\n        }\r\n        })\r\n        .then((data) => localStorage.setItem('user',JSON.stringify(data.user)))\r\n        .then(() => this.setState({isUserLoggedin:true}))\r\n        .catch((error) => this.setState({pageError:'Not able to fetch the articles'}))\r\n        window.location.href = 'http://localhost:3000/'\r\n    }\r\n\r\n       \r\n    render(){\r\n        if(localStorage.getItem('user') || this.state.isUserLoggedin){\r\n            return <Redirect  to='/' />\r\n        }else{\r\n        return(\r\n            <section className='h-screen overflow-hidden bg-gray-100 flex items-center justify-center' >\r\n                   <div className=  ' w-96 h-96 p-3  rounded-md shadow-xl'>\r\n                        <div className=''>\r\n                            <div className='text-center my-2 text-2xl font-bold  text-shadow-md'>\r\n                                <h2>Login</h2>\r\n                            </div>\r\n                            <form >\r\n                                <div className='flex flex-col my-2'>\r\n                                    <label className='text-md text-green-800 font-bold' htmlFor='email' id='email-label'>Email</label>\r\n                                    <input onChange={this.handleInput} className='w-full shadow  p-1 border border-transparent focus:outline-none focus:ring-2 focus:ring-red-700 focus:border-transparent  outline-none  rounded-sm' id='email' type='email' value={this.state.email} name='email'  placeholder='Please enter email'></input>\r\n                                    <span className='text-red-500 text-sm my-1'>{this.state.errors.email ? this.state.errors.email : ''}</span>\r\n                                </div>\r\n                                <div className='flex flex-col my-2'>\r\n                                    <label className='text-md text-green-800 font-bold' htmlFor='Password' id='Password-label'>Password</label>\r\n                                    <input onChange={this.handleInput} className='w-full shadow p-1 border border-transparent focus:outline-none focus:ring-2 focus:ring-red-700 focus:border-transparent  outline-none  rounded-sm' id='Password' type='password' value={this.state.password} name='password'  placeholder='Please enter Password'></input>\r\n                                    <span className='text-red-500 text-sm my-1'>{this.state.errors.password ? this.state.errors.password : ''}</span>\r\n                                </div>\r\n                                <div className='flex justify-center my-4'>\r\n                                    <button onClick={this.handlelogin} className='bg-red-800 py-2 px-6 text-white rounded-sm' type='submit' >Login</button>\r\n                                </div>\r\n                                <div className='flex flex-row text-center justify-center'>\r\n                                    <h2 className='text-md font-bold text-green-800'>Not Registered Yet? </h2>\r\n                                    <Link to='/signup' className='text-blue-700 font-bold mx-1'>\r\n                                       Register\r\n                                    </Link>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                   </div>\r\n            </section>\r\n        )\r\n    \r\n    }\r\n  }\r\n}\r\n\r\nexport default Login","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/SingleArticle.js",["92","93","94"],"/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/Newpost.js",["95","96","97"],"import React from 'react'\r\nimport {EditorState,Editor} from 'draft-js'\r\n\r\n\r\nclass NewPost extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            title:'',\r\n            description:'',\r\n            body:'',\r\n            tagList:'',\r\n            pageError:'',\r\n            errors:{\r\n                title:'',\r\n                description:'',\r\n                body:'',\r\n                tagList:''\r\n            }\r\n        }   \r\n    }\r\n\r\n\r\n    handleInput = (event) => {\r\n       const {name,value} = event.target\r\n       let errors = this.state.errors\r\n       switch (name) {\r\n           case 'title':\r\n            errors.title = value.trim().length >=10 ? '' : \" title can't be empty  \"\r\n                this.setState({title:value})\r\n               break;\r\n            case 'description':\r\n                errors.description = value.trim().length >=10 ? '' : \" Description must be atleast 20 characters  \"\r\n                this.setState({description:value})\r\n                break;\r\n            case 'tags':\r\n\r\n                errors.tagList = value.trim().length >=10 ? '' : \" tagList can't be empty  \"\r\n                let tags = value.split(',')\r\n                this.setState({tagList:tags})\r\n                break\r\n            case 'body':\r\n                errors.body = value.trim().length >= 200  ? '' : 'Body must be atleast 200 characters'\r\n                this.setState({body:value})\r\n           default:\r\n               break;\r\n       }\r\n    }\r\n\r\n    handleSubmitNewPost = async (event) => {\r\n      event.preventDefault();\r\n      const article= {\r\n          \"article\":{\r\n            title:this.state.title,\r\n            description:this.state.description,\r\n            body:this.state.body,\r\n            tagList:this.state.tagList,\r\n          }\r\n      }\r\n\r\n     await fetch(`/api/articles`,{method:'POST',headers:{'Content-Type':'application/json','Authorization': JSON.parse(localStorage.getItem('user')).token},body:JSON.stringify(article)})\r\n      .then((res) => {\r\n        if(!res.ok){\r\n          throw new Error(res.statusText)\r\n        }else{\r\n          return res.json()\r\n        }\r\n        })\r\n      .then((data) => console.log(data))\r\n      .catch((error) => this.setState({pageError:'Not able to fetch the articles'}))\r\n        window.location.href = 'http://localhost:3000/'\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <section className='my-20 flex  items-center  w-full justify-center  '>\r\n                   <div className='w-full justify-center mx-60  items-center'>\r\n                       <h2 className='text-center text-3xl font-bold text-shadow-sm text-green-500'>Create new post</h2>\r\n                        <form className='flex flex-col px-10 py-5   justify-items-center rounded-md   shadow-2xl'>\r\n                            <div className='block-1 flex flex-col my-1'>\r\n                                <label htmlFor='title' className='text-xl font-bold py-1 text-red-700 text-shadow-sm' id='title-label'>Title</label>\r\n                                <input required onChange={this.handleInput} type='text' className='w-full border-2 border-green-300  shadow-md p-1  border-transparent focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent' name='title' id='title' placeholder='Enter your title'></input>\r\n                                <span  className={!this.state.errors.title ? 'hidden' : ' text-xs text-red-400 font-bold'}>Title can't be empty</span>\r\n                            </div>\r\n                            <div className='block-1 my-1  flex flex-col'>\r\n                                <label htmlFor='description' className='text-xl py-1 font-bold text-red-700 text-shadow-sm' id='descrption-label'>Description</label>\r\n                                <input  onChange={this.handleInput} type='text' className='w-full border-2  border-green-300 shadow-md p-1  border-transparent focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent' required name='description' id='description' placeholder='Enter your description'></input>\r\n                                <span className={!this.state.errors.description ? 'hidden' : ' text-xs text-red-400 font-bold'}>Description must have atleast 20 characters</span>\r\n                            </div>\r\n                            <div className='block-1 my-1  flex flex-col'>\r\n                                <label htmlFor='body' className='text-xl py-1 font-bold text-red-700 text-shadow-sm' id='body-label'>Body</label>\r\n                                <textarea  required className='w-full border-2  border-green-300  shadow-md p-1  border-transparent focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent' name='body' value={this.state.body} onChange={this.handleInput} rows='10'  placeholder='Enter your body for your post.(This will support markdown)'></textarea>\r\n                                <span className={!this.state.errors.body ? 'hidden' : ' text-xs text-red-400 font-bold'}>Body must be atleast 200 characters</span>\r\n                            </div>\r\n                            <div className='flex my-1 flex-col'>\r\n                                <label htmlFor='tags' className='text-xl py-1 font-bold text-red-700 text-shadow-sm'>Tags</label>\r\n                                <input  required onChange={this.handleInput} type='text' className='w-full border-2  border-green-300  shadow-md p-1  border-transparent focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent' name='tags' id='tags' placeholder='Enter your tags'></input>\r\n                                <span className={!this.state.errors.tagList ? 'hidden' : ' text-xs text-red-400 font-bold'}>TagList can't be empty</span>\r\n                            </div>\r\n                            <div className='flex items-center justify-center my-2'>\r\n                                <button disabled={this.state.errors.title || this.state.errors.body} onClick={this.handleSubmitNewPost} className='text-2xl rounded bg-black text-white px-6 py-2 '>Submit</button>\r\n                            </div>\r\n                        </form>\r\n                   </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewPost","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/EditArticle.js",[],"/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/UserProfile.js",["98"],"import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {validateEmail,validatePassword} from './SignUp'\r\n\r\nclass UserProfile extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            username:'',\r\n            email:'',\r\n            bio:'',\r\n            password:'',\r\n            errors :{\r\n                email:'',\r\n               password:'',\r\n               username:'',\r\n            },\r\n            image:'',\r\n            currentUser:null\r\n        }\r\n    }\r\n\r\n\r\n    handleInput = (event) => {\r\n        const{name,value} = event.target\r\n        const errors = this.state.errors\r\n           switch (name) {\r\n               case 'username':\r\n                   \r\n                   errors.username = (value.length >=6 && value.trim().length>=6 ) ? '' : 'Username must contain 6 characters'\r\n                    this.setState({username:value})\r\n                   break;\r\n               case 'email':\r\n                   errors.email = validateEmail(value) ? '' : 'Please enter valid email'\r\n                   this.setState({email:value})\r\n                   break\r\n               case 'password':\r\n                   errors.password = (value.length >=6 && validatePassword(value)) ? '': ' Password must a number & letter'\r\n                   this.setState({password:value})\r\n                   break;\r\n                case 'image':\r\n                    this.setState({image:value})\r\n                    break;\r\n                case 'bio':\r\n                    this.setState({bio:value})\r\n                    break;\r\n               default:\r\n                   break;\r\n           }\r\n       }\r\n    \r\n       handleUpdateProfile =  (event) => {\r\n            event.preventDefault();\r\n           const user = {\r\n               \"user\":{\r\n                   image:this.state.image,\r\n                   bio:this.state.bio,\r\n                 \r\n               }\r\n           }\r\n\r\n         fetch(`/api/user`,{method:'PUT',headers:{'Content-Type':'application/json','Authorization': JSON.parse(localStorage.getItem('user')).token},body:JSON.stringify(user)})\r\n            .then((res) => res.json())\r\n            .then((user) =>this.setState({bio:user.user.bio,image:user.user.image}))\r\n            window.location.reload()\r\n            \r\n\r\n       }\r\n   \r\n\r\n\r\n    componentDidMount(){\r\n        fetch(`/api/user`,{method:'GET',headers:{'Content-Type':'application/json','Authorization': JSON.parse(localStorage.getItem('user')).token}})\r\n        .then((res) => res.json())\r\n        .then((user) => this.setState({\r\n            email:user.user.email,\r\n            bio:user.user.bio,\r\n            image:user.user.image,\r\n            username:user.user.username\r\n        }))\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <section className='h-screen container mx-auto overflow-hidden bg-gray-100 flex items-center justify-center' >\r\n            <div className=  ' w-96  p-3    rounded-md shadow-xl'>\r\n                 <div className=''>\r\n                     <div className='text-center my-2 text-2xl font-bold  text-shadow-md'>\r\n                         <h2>Update Profile</h2>\r\n                     </div>\r\n                     <form >\r\n                         <div className='flex flex-col my-1'>\r\n                             <label className='text-md text-red-800 font-bold' htmlFor='username' id='username-label'>Profile Pic URL</label>\r\n                             <input onChange={this.handleInput} className='w-full  p-1 shadow border border-transparent focus:outline-none focus:ring-2 focus:ring-green-700 focus:border-transparent  outline-none  rounded-sm' id='image' type='text' value={this.state.image} name='image'  placeholder='Please enter username'></input>\r\n                             <span className='text-red-500 text-sm my-1'>{this.state.errors.username ? this.state.errors.username : ''}</span>\r\n                         </div>\r\n                         <div className='flex flex-col my-2'>\r\n                             <label className='text-md text-red-800 font-bold' htmlFor='email' id='email-label'>Username</label>\r\n                             <input readOnly onChange={this.handleInput} className='w-full shadow  p-1 border border-transparent focus:outline-none focus:ring-2 focus:ring-green-700 focus:border-transparent  outline-none  rounded-sm' id='username' type='text' value={this.state.username} name='username'  placeholder='Please enter email'></input>\r\n                             <span className='text-red-500 text-sm my-1'>{this.state.errors.username ? this.state.errors.username : ''}</span>\r\n                         </div>\r\n                         <div className='flex flex-col my-2'>\r\n                             <label className='text-md text-red-800 font-bold' htmlFor='Password' id='Password-label'>Bio</label>\r\n                             <input onChange={this.handleInput} className='w-full shadow p-1 border border-transparent focus:outline-none focus:ring-2 focus:ring-green-700 focus:border-transparent  outline-none  rounded-sm' id='bio' type='text' value={this.state.bio} name='bio'  placeholder='Please update your bio'></input>\r\n                             <span className='text-red-500 text-sm my-1'>{this.state.errors.bio ? this.state.errors.bio : ''}</span>\r\n                         </div>\r\n                         <div className='flex flex-col my-2'>\r\n                             <label className='text-md text-red-800 font-bold' htmlFor='Password' id='Password-label'>Email</label>\r\n                             <input readOnly onChange={this.handleInput} className='w-full shadow p-1 border border-transparent focus:outline-none focus:ring-2 focus:ring-green-700 focus:border-transparent  outline-none  rounded-sm' id='email' type='email' value={this.state.email} name='email'  placeholder='Update your email'></input>\r\n                             <span className='text-red-500 text-sm my-1'>{this.state.errors.email ? this.state.errors.email : ''}</span>\r\n                         </div>\r\n                         <div className='flex flex-col my-2'>\r\n                             <label className='text-md text-red-800 font-bold' htmlFor='Password' id='Password-label'>Update Password</label>\r\n                             <input onChange={this.handleInput} className='w-full shadow p-1 border border-transparent focus:outline-none focus:ring-2 focus:ring-green-700 focus:border-transparent  outline-none  rounded-sm' id='Password' type='password' value={this.state.password} name='password'  placeholder='Update your Password'></input>\r\n                             <span className='text-red-500 text-sm my-1'>{this.state.errors.password ? this.state.errors.password : ''}</span>\r\n                         </div>\r\n                                <div className='flex justify-center my-4'>\r\n                                    <button onClick={this.handleUpdateProfile} className='bg-red-800 py-2 px-6 text-white rounded-sm' type='submit' >Update</button>\r\n                                </div>\r\n\r\n                     </form>\r\n                 </div>\r\n            </div>\r\n     </section>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default UserProfile","/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/UserInfo.js",[],"/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/NoMatch.js",[],"/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/Comment.js",[],"/mnt/c/Users/N Gangadhar Reddy/Desktop/AltCampus/react-blog-app/blog-app/src/components/Pagination.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":26,"column":12,"nodeType":"105","messageId":"106","endLine":26,"endColumn":16},{"ruleId":"103","severity":1,"message":"107","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":14},{"ruleId":"108","severity":1,"message":"109","line":5,"column":5,"nodeType":"110","messageId":"111","endLine":8,"endColumn":6},{"ruleId":"103","severity":1,"message":"112","line":3,"column":8,"nodeType":"105","messageId":"106","endLine":3,"endColumn":12},{"ruleId":"113","severity":1,"message":"114","line":117,"column":38,"nodeType":"115","messageId":"116","endLine":117,"endColumn":39,"suggestions":"117"},{"ruleId":"113","severity":1,"message":"114","line":117,"column":63,"nodeType":"115","messageId":"116","endLine":117,"endColumn":64,"suggestions":"118"},{"ruleId":"113","severity":1,"message":"114","line":117,"column":72,"nodeType":"115","messageId":"116","endLine":117,"endColumn":73,"suggestions":"119"},{"ruleId":"113","severity":1,"message":"114","line":117,"column":76,"nodeType":"115","messageId":"116","endLine":117,"endColumn":77,"suggestions":"120"},{"ruleId":"103","severity":1,"message":"121","line":1,"column":10,"nodeType":"105","messageId":"106","endLine":1,"endColumn":14},{"ruleId":"103","severity":1,"message":"121","line":1,"column":10,"nodeType":"105","messageId":"106","endLine":1,"endColumn":14},{"ruleId":"103","severity":1,"message":"122","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":16},{"ruleId":"103","severity":1,"message":"123","line":7,"column":8,"nodeType":"105","messageId":"106","endLine":7,"endColumn":11},{"ruleId":"103","severity":1,"message":"124","line":2,"column":9,"nodeType":"105","messageId":"106","endLine":2,"endColumn":20},{"ruleId":"103","severity":1,"message":"122","line":2,"column":21,"nodeType":"105","messageId":"106","endLine":2,"endColumn":27},{"ruleId":"125","severity":1,"message":"126","line":45,"column":12,"nodeType":"127","messageId":"128","endLine":46,"endColumn":22},{"ruleId":"103","severity":1,"message":"107","line":2,"column":9,"nodeType":"105","messageId":"106","endLine":2,"endColumn":13},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Home' is defined but never used.","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["131","132"],["133","134"],["135","136"],["137","138"],"'data' is defined but never used.","'Editor' is defined but never used.","'gfm' is defined but never used.","'EditorState' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-global-assign","no-unsafe-negation",{"messageId":"139","fix":"140","desc":"141"},{"messageId":"142","fix":"143","desc":"144"},{"messageId":"139","fix":"145","desc":"141"},{"messageId":"142","fix":"146","desc":"144"},{"messageId":"139","fix":"147","desc":"141"},{"messageId":"142","fix":"148","desc":"144"},{"messageId":"139","fix":"149","desc":"141"},{"messageId":"142","fix":"150","desc":"144"},"removeEscape",{"range":"151","text":"152"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"153","text":"154"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"155","text":"152"},{"range":"156","text":"154"},{"range":"157","text":"152"},{"range":"158","text":"154"},{"range":"159","text":"152"},{"range":"160","text":"154"},[6043,6044],"",[6043,6043],"\\",[6068,6069],[6068,6068],[6077,6078],[6077,6077],[6081,6082],[6081,6081]]